name: Pull request
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  generate-package-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: 'Install npm for main'
        run: npm install
      - name: 'Generate sources'
        run: npm run generate
      - name: 'Run the tests'
        run: npm run test

  build-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - name: 'Install npm for main'
        run: npm install
        working-directory: ./packages/npm

      - name: 'Build package'
        run: npm run build
        working-directory: ./packages/npm

      - name: 'Run tests'
        run: npm run test
        working-directory: ./packages/npm
  build-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          java-version: '19'
          distribution: 'adopt'
      - run: mvn clean test
        working-directory: ./packages/maven
        
  build-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: ./packages/go/go.mod
      - name: Build
        run: |
          go build ./...
          go test ./...
        working-directory: ./packages/go
